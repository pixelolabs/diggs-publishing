{% if section.blocks.size > 0 %}
  {% if product.metafields.custom.half_image_half_content_title_first != blank
    or product.metafields.custom.half_image_half_content_title_second != blank
  %}
    <div class="half-image-half-content-outer {{ section.settings.section_class | schema }} {% if section.settings.image_position == 'right' %} section-row-right {% endif %}{% if section.settings.wave_color == 'yellow-wave' %} yellow-wave{% elsif section.settings.wave_color == 'transparent-wave' %} transparent-wave {% elsif section.settings.wave_color == 'blue-wave' %} blue-wave{% else %} no-wave {% endif %}">
      {% for block in section.blocks %}
        <div class="half-image-half-content {% if block.settings.background_color == 'transparent-bg' %} no-bg-color{% elsif block.settings.background_color == 'brown' %} bg-brown {% elsif block.settings.background_color == 'blue' %}  bg-blue {% else %} no-bg {% endif %}">
          <div class="container-1260 flex">
            {% if block.settings.image != blank %}
              <div class="image-wrapper">
                <div
                  class="image-section"
                  data-aos="fade-up"
                  data-aos-duration="2000"
                >
                  {% assign mobile_image = block.settings.image | default: block.settings.image %}
                  {% assign tablet_image = block.settings.image | default: block.settings.image %}
                  {% assign desktop_image = block.settings.image %}
                  {% assign mobile_width = 750 %}
                  {% assign tablet_width = 1200 %}
                  {% assign desktop_width = 1400 %}

                  {% if forloop.first %}
                    {{
                      mobile_image
                      | image_url: width: mobile_width, format: 'webp'
                      | preload_tag: as: 'image', media: '(max-width: 767px)'
                    }}
                    {{
                      tablet_image
                      | image_url: width: tablet_width, format: 'webp'
                      | preload_tag: as: 'image', media: '(min-width: 768px) and (max-width: 1023px)'
                    }}
                    {{
                      desktop_image
                      | image_url: width: desktop_width, format: 'webp'
                      | preload_tag: as: 'image', media: '(min-width: 1024px)'
                    }}
                  {% endif %}

                  <picture>
                    <!-- Mobile sizes WebP -->
                    <source
                      type="image/webp"
                      media="(max-width: 767px)"
                      srcset="
                        {{ mobile_image | image_url: width: 375, format: 'webp' }} 375w,
                        {{ mobile_image | image_url: width: 550, format: 'webp' }} 550w,
                        {{ mobile_image | image_url: width: mobile_width, format: 'webp' }} {{ mobile_width }}w
                      "
                      sizes="100vw"
                    >

                    <!-- Tablet sizes WebP -->
                    <source
                      type="image/webp"
                      media="(min-width: 768px) and (max-width: 1023px)"
                      srcset="
                        {{ tablet_image | image_url: width: 768, format: 'webp' }} 768w,
                        {{ tablet_image | image_url: width: 1024, format: 'webp' }} 1024w,
                        {{ tablet_image | image_url: width: tablet_width, format: 'webp' }} {{ tablet_width }}w
                      "
                      sizes="100vw"
                    >

                    <!-- Desktop sizes WebP -->
                    <source
                      type="image/webp"
                      media="(min-width: 1024px)"
                      srcset="
                        {{ desktop_image | image_url: width: 1000, format: 'webp' }} 1000w,
                        {{ desktop_image | image_url: width: desktop_width, format: 'webp' }} {{ desktop_width }}w,
                        {{ desktop_image | image_url: width: 1800, format: 'webp' }} 1800w
                      "
                      sizes="100vw"
                    >

                    <!-- Fallback for non-WebP support -->
                    <img
                      src="{{ mobile_image | image_url: width: mobile_width }}"
                      srcset="
                        {{ mobile_image | image_url: width: mobile_width }} {{ mobile_width }}w,
                        {{ tablet_image | image_url: width: tablet_width }} {{ tablet_width }}w,
                        {{ desktop_image | image_url: width: desktop_width }} {{ desktop_width }}w
                      "
                      sizes="(max-width: 767px) 100vw, (max-width: 1023px) 100vw, 100vw"
                      width="{{ mobile_width }}"
                      height="{{ mobile_width | divided_by: mobile_image.aspect_ratio | round }}"
                      {% if forloop.first %}
                        fetchpriority="high"
                      {% else %}
                        loading="lazy"
                      {% endif %}
                      decoding="async"
                      alt="{{ block.settings.title  }}"
                      style="width: 100%;  display: block;"
                    >
                  </picture>
                </div>
              </div>
            {% endif %}
            <div
              class="full-format flex-justify-column-center content {% if block.settings.image == blank and block.settings.video == blank %} full {% endif %} {%if block.settings.center == true%}center{%endif%}"
              data-aos="fade-up"
              data-aos-duration="2000"
            >
              <div class="inner">
                {% if block.settings.title != blank %}
                  <h2 class="w-250 {% if block.settings.fontSize == true %} size {% endif %}">
                    {{ block.settings.title }}
                  </h2>
                {% endif %}
                {% if block.settings.description != blank %}
                  {{ block.settings.description }}
                {% endif %}
                {% if block.settings.buttonText != blank %}
                  <a
                    href="{{ block.settings.buttonLink }}"
                    title="Read More About {{ block.settings.buttonText }}"
                    aria-label="Read More About {{ block.settings.buttonText }}"
                    class="btn--primary green"
                  >
                    {{ block.settings.buttonText }}
                  </a>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  {% endif %}
{% endif %}
{% schema %}
{
  "name": "Half Image Half Content",
  "settings": [
    {
      "type": "header",
      "content": "Extra Settings",
      "info": "Recommened to be used by the developer only"
    },
    {
      "type": "text",
      "id": "section_class",
      "label": "Add custom class"
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Image Position Left or Right",
      "options": [
        {
          "value": "right",
          "label": "Right"
        },
        {
          "value": "left",
          "label": "Left"
        }
      ],
      "default": "left"
    },
    {
      "type": "header",
      "content": "Extra Settings",
      "info": "Recommened to match the wave color with Background of the first section"
    },
    {
      "type": "select",
      "id": "wave_color",
      "label": "Wave color",
      "options": [
        {
          "value": "transparent-wave",
          "label": "Transparent"
        },
        {
          "value": "yellow-wave",
          "label": "Yellow"
        },
        {
          "value": "blue-wave",
          "label": "Blue"
        }
      ],
      "default": "blue-wave"
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Section",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },

        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "buttonText",
          "label": "Button Text"
        },
        {
          "type": "url",
          "id": "buttonLink",
          "label": "Button Link"
        },
        {
          "type": "header",
          "content": "Extra Settings",
          "info": "Recommened to be used by the developer only"
        },
        {
          "type": "select",
          "id": "background_color",
          "label": "Background color",
          "options": [
            {
              "value": "transparent-bg",
              "label": "Yellow"
            },
            {
              "value": "brown",
              "label": "Brown"
            },
            {
              "value": "blue",
              "label": "Blue"
            }
          ],
          "default": "blue"
        },
        {
          "type": "checkbox",
          "id": "fontSize",
          "label": "Do you want the title to be bigger?"
        },
        {
          "type": "header",
          "content": "Mobile Settings"
        },
        {
          "type": "checkbox",
          "id": "center",
          "label": "Center align the content"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Half Image Half Content"
    }
  ]
}
{% endschema %}
<script>
  jQuery(function () {
    document.addEventListener('DOMContentLoaded', function () {
      var video = document.querySelector('.video');
      var playIcon = document.querySelector('.play-icon');

      // Hide play icon when video starts playing
      video.addEventListener('play', function () {
        playIcon.style.display = 'none';
      });

      // Show play icon when video pauses
      video.addEventListener('pause', function () {
        playIcon.style.display = 'block';
      });

      // Show play icon when video ends
      video.addEventListener('ended', function () {
        playIcon.style.display = 'block';
      });

      // Play video when play icon is clicked
      playIcon.addEventListener('click', function () {
        video.play();
      });
    });
  });
</script>

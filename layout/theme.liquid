<!doctype html>
  <html class="no-js" lang="{{ request.locale.iso_code }}">
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5">
  
      <meta name="description" content="Diggs publishing">
      <link rel="canonical" href="{{ canonical_url }}">
  
      {% include 'head' %}
      {% include 'sm-og-data' %}
      {% include 'scripts_head' %}
  
      {% render 'boost-sd-fallback' %}
      {{ content_for_header }}
  
      <!-- Commented code removed for cleaner HTML -->
      <!-- <link href='//hulkapps-wishlist.nyc3.digitaloceanspaces.com/assets/hulkapps-wishlist-styles.css' rel='stylesheet'> -->
  
      <!-- Lazy load external script -->
      <script async defer src="https://tools.luckyorange.com/core/lo.js?site-id=8894106a"></script>
      <script>
        document.addEventListener('DOMContentLoaded', function () {
          function formatEuroPrices() {
            // Select all price elements
            const priceElements = document.querySelectorAll('.product-card__price span');
  
            priceElements.forEach(function (element) {
              let priceText = element.textContent.trim();
  
              // Check if the price text starts with the Euro symbol
              if (priceText.startsWith('€')) {
                // Remove the Euro symbol temporarily
                priceText = priceText.substring(1);
  
                // Replace the comma with a dot
                priceText = priceText.replace(',', '.');
  
                // Add the Euro symbol back and update the element
                element.textContent = '€' + priceText;
              }
            });
  
            pdpPriceElements = document.querySelectorAll('.product-single__prices span');
  
            pdpPriceElements.forEach(function (element) {
              let priceText = element.textContent.trim();
  
              // Check if the price text starts with the Euro symbol
              if (priceText.startsWith('€')) {
                // Remove the Euro symbol temporarily
                priceText = priceText.substring(1);
  
                // Replace the comma with a dot
                priceText = priceText.replace(',', '.');
  
                // Add the Euro symbol back and update the element
                element.textContent = '€' + priceText;
              }
            });
  
            pdpComPriceElements = document.querySelectorAll('.product-single__prices s');
  
            pdpComPriceElements.forEach(function (element) {
              let priceText = element.textContent.trim();
  
              // Check if the price text starts with the Euro symbol
              if (priceText.startsWith('€')) {
                // Remove the Euro symbol temporarily
                priceText = priceText.substring(1);
  
                // Replace the comma with a dot
                priceText = priceText.replace(',', '.');
  
                // Add the Euro symbol back and update the element
                element.textContent = '€' + priceText;
              }
            });
          }
  
          // Run the formatting function when the page loads
          formatEuroPrices();
  
          // If you're using AJAX to update prices, you might need to run this function again after price updates
          // For example, if you're using Shopify's Ajax API:
          if (typeof Shopify !== 'undefined' && Shopify.onItemAdded) {
            Shopify.onItemAdded = function () {
              formatEuroPrices();
              // ... any other code you want to run when an item is added ...
            };
          }
        });
      </script>
    </head>
  
    <body class="template-{{ request.page_type | handle }} transparent-header">
      <script>
        // Redirect optimization - consider removing this if unnecessary
        if (/collections$/.test(window.location.href)) {
          var url = `${window.location.href}/all`;
          window.location.href = url;
        }
  
        // Remove 'no-js' class after JS is loaded
        document.documentElement.classList.remove('no-js');
      </script>
  
      {% section 'announcement' %}
      {% section 'header' %}
      
      <div class="page-container drawer-page-content" id="PageContainer">
        <main class="main-content js-focus-hidden js__main-content" id="MainContent" role="main" tabindex="-1">
          {{ content_for_layout }}
        </main>
        {% section 'footer' %}
      </div>
  
      {% include 'scripts_footer' %}
  
      {% comment %}
        <!-- Commented-out code removed -->
      {% endcomment %}
  
      {% include 'swym-custom' %}
  
      <script>
        // Optimize AOS initialization and event handling
        AOS.init({ startEvent: 'DOMContentLoaded' });
        document.addEventListener('DOMContentLoaded', function () {
          var cloneDOMContentLoaded = new Event('cloneDOMContentLoaded');
          document.dispatchEvent(cloneDOMContentLoaded);
        });
      </script>
    </body>
  </html>
  